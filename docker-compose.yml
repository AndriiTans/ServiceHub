version: '3.8'

services:
  # Auth Service
  auth-service:
    build:
      context: ./services/auth-service
      dockerfile: Dockerfile
    ports:
      - "${AUTH_SERVICE_PORT}:${AUTH_SERVICE_PORT}"
    env_file:
      - .env
    environment:
      - PORT=${AUTH_SERVICE_PORT}
      - NODE_ENV=${AUTH_SERVICE_NODE_ENV}
      - DB_HOST=${AUTH_SERVICE_DB_HOST}
      - DB_PORT=${AUTH_SERVICE_DB_PORT}
      - DB_USER=${AUTH_SERVICE_DB_USER}
      - DB_PASSWORD=${AUTH_SERVICE_DB_PASSWORD}
      - DB_NAME=${MYSQL_AUTH_DB_NAME}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - app-network
    command: ["/usr/src/app/wait-for-it.sh", "${AUTH_SERVICE_DB_HOST}", "${AUTH_SERVICE_DB_PORT}", "--", "npm", "start"]
    healthcheck:
      test: ["CMD-SHELL", "/usr/src/app/healthcheck.sh"]
      interval: 1s
      timeout: 5s
      retries: 5

  # Shop Service
  shop-service:
    build:
      context: ./services/shop-service
      dockerfile: Dockerfile
    ports:
      - "${SHOP_SERVICE_PORT}:${SHOP_SERVICE_PORT}"
    env_file:
      - .env
    environment:
      - NODE_ENV=${SHOP_SERVICE_NODE_ENV}
      - PORT=${SHOP_SERVICE_PORT}
      - DB_HOST=${SHOP_SERVICE_DB_HOST}
      - DB_PORT=${SHOP_SERVICE_DB_PORT}
      - DB_USER=${SHOP_SERVICE_DB_USER}
      - DB_PASSWORD=${SHOP_SERVICE_DB_PASSWORD}
      - DB_NAME=${SHOP_SERVICE_DB_NAME}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - SHOP_SERVICE_URL=http://shop-service:${SHOP_SERVICE_PORT}
    depends_on:
      mysql:
        condition: service_healthy
      auth-service:
        condition: service_healthy
    networks:
      - app-network
    command: ["npm", "start"]
    healthcheck:
      test: ["CMD-SHELL", "/usr/src/app/healthcheck.sh"]
      interval: 5s
      timeout: 20s
      retries: 5

  # MySQL Database Service
  mysql:
    image: mysql:latest
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    ports:
      - "${MYSQL_PORT}:${MYSQL_PORT}"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  # Parser Service
  # parser-service:
  #   build:
  #     context: ./parser-service
  #     dockerfile: Dockerfile
  #   ports:
  #     - "${PARSER_SERVICE_PORT}:${PARSER_SERVICE_PORT}"
  #   env_file:
  #     - .env
  #   environment:
  #     - NODE_ENV=${PARSER_SERVICE_NODE_ENV}
  #     - AUTH_SERVICE_URL=${AUTH_SERVICE_URL}
  #   depends_on:
  #     auth-service:
  #       condition: service_healthy
  #   networks:
  #     - app-network
  #   command: ["npm", "start"]

  # Frontend
  # frontend:
  #   build:
  #     context: ./services/frontend-app
  #     dockerfile: Dockerfile
  #   ports:
  #     - "3000:80"
  #   networks:
  #     - app-network
  #   depends_on:
  #     shop-service:
  #       condition: service_healthy
  #   environment:
  #     - REACT_APP_API_URL=http://shop-service:3003

volumes:
  mysql_data:

networks:
  app-network:
