name: Deploy to AWS

on:
  push:
    branches:
      - master
      - deployment

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: us-east-1
      TF_WORKING_DIR: infrastructure

    steps:
      # Checkout code
      - name: Checkout Code
        uses: actions/checkout@v4

      # Set environment based on branch
      - name: Set Environment
        id: env
        run: |
          if [[ "${{ github.ref_name }}" == "main" ]]; then
            echo "env_name=prod" >> $GITHUB_ENV
            echo "tfvars_file=prod.tfvars" >> $GITHUB_ENV
          else
            echo "env_name=dev" >> $GITHUB_ENV
            echo "tfvars_file=dev.tfvars" >> $GITHUB_ENV
          fi


      # Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Dependencies for Build
        working-directory: services
        run: |
          # Install all dependencies (including devDependencies) for the build step
          cd auth-service && npm install
          cd ../shop-service && npm install

      - name: Build and Package Lambda Functions
        working-directory: services
        run: |
          # Auth Service
          cd auth-service
          npm run build
          npm prune --production # Remove devDependencies after the build
          zip -r auth-service.zip dist node_modules package.json
          mv auth-service.zip ../../infrastructure/lambda/dist-package-auth.zip
          cd ..

          # Shop Service
          cd shop-service
          npm run build
          npm prune --production # Remove devDependencies after the build
          zip -r shop-service.zip dist node_modules package.json
          mv shop-service.zip ../../infrastructure/lambda/dist-package-shop.zip

      # Verify ZIP files and check their contents
      - name: Verify and Inspect ZIP Files
        run: |
          if [[ ! -f "infrastructure/lambda/dist-package-auth.zip" ]]; then
            echo "Error: dist-package-auth does not exist!" && exit 1
          fi
          if [[ ! -f "infrastructure/lambda/dist-package-shop.zip" ]]; then
            echo "Error: dist-package-shop.zip does not exist!" && exit 1
          fi

          echo "Both ZIP files exist. Checking sizes..."

          echo "Size of dist-package-auth.zip:"
          du -h infrastructure/lambda/dist-package-auth.zip
          echo "Size of dist-package-shop.zip:"
          du -h infrastructure/lambda/dist-package-shop.zip

          echo "Both ZIP files exist. Checking contents..."

          # echo "Contents of dist-package-auth.zip:"
          # unzip -l infrastructure/lambda/dist-package-auth.zip

          # echo "Contents of dist-package-shop.zip:"
          # unzip -l infrastructure/lambda/dist-package-shop.zip

      # Run deployment script
      - name: Deploy to AWS
        run: node scripts/deploy.js
