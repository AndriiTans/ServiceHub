name: Deploy to AWS

on:
  push:
    branches:
      - main
      - deployment
    paths:
      - "services/auth-service/**"
      - "services/shop-service/**"
      - "infrastructure/**"

jobs:
  deploy-auth-service:
    name: Deploy Auth Service
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.message, 'auth-service') || github.event.paths[0] == 'services/auth-service/**'

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: us-east-1
      TF_WORKING_DIR: infrastructure

    steps:
      # Checkout code
      - name: Checkout Code
        uses: actions/checkout@v4

      # Set environment variables
      - name: Set Environment
        run: echo "tfvars_file=dev.tfvars" >> $GITHUB_ENV

      # Set up Node.js and build auth-service
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install and Build Auth Service
        working-directory: services/auth-service
        run: |
          npm install
          npm run build
          cd dist
          zip -r auth-service.zip .
          mv auth-service.zip ../../../infrastructure/lambda/auth-service.zip

      # Deploy with Terraform
      - name: Deploy Auth Service Infrastructure
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: |
          terraform init
          terraform apply -auto-approve -var-file=env/${{ env.tfvars_file }}

  deploy-shop-service:
    name: Deploy Shop Service
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.message, 'shop-service') || github.event.paths[0] == 'services/shop-service/**'

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: us-east-1
      TF_WORKING_DIR: infrastructure

    steps:
      # Checkout code
      - name: Checkout Code
        uses: actions/checkout@v4

      # Set environment variables
      - name: Set Environment
        run: echo "tfvars_file=dev.tfvars" >> $GITHUB_ENV

      # Set up Node.js and build shop-service
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install and Build Shop Service
        working-directory: services/shop-service
        run: |
          npm install
          npm run build
          cd dist
          zip -r shop-service.zip .
          mv shop-service.zip ../../../infrastructure/lambda/shop-service.zip

      # Deploy with Terraform
      - name: Deploy Shop Service Infrastructure
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: |
          terraform init
          terraform apply -auto-approve -var-file=env/${{ env.tfvars_file }}
